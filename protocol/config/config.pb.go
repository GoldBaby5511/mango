// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMDID_Config int32

const (
	CMDID_Config_IDApolloCfgReq    CMDID_Config = 1 // 请求配置
	CMDID_Config_IDApolloCfgRsp    CMDID_Config = 2 // 配置响应
	CMDID_Config_IDApolloCfgRspFin CMDID_Config = 3 // 配置响应结束
)

// Enum value maps for CMDID_Config.
var (
	CMDID_Config_name = map[int32]string{
		1: "IDApolloCfgReq",
		2: "IDApolloCfgRsp",
		3: "IDApolloCfgRspFin",
	}
	CMDID_Config_value = map[string]int32{
		"IDApolloCfgReq":    1,
		"IDApolloCfgRsp":    2,
		"IDApolloCfgRspFin": 3,
	}
)

func (x CMDID_Config) Enum() *CMDID_Config {
	p := new(CMDID_Config)
	*p = x
	return p
}

func (x CMDID_Config) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMDID_Config) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[0].Descriptor()
}

func (CMDID_Config) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[0]
}

func (x CMDID_Config) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMDID_Config) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMDID_Config(num)
	return nil
}

// Deprecated: Use CMDID_Config.Descriptor instead.
func (CMDID_Config) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

type ApolloCfgReq_EnumSubscribe int32

const (
	ApolloCfgReq_NOT_SUBSCRIBE ApolloCfgReq_EnumSubscribe = 0 // 不订阅
	ApolloCfgReq_SUBSCRIBE     ApolloCfgReq_EnumSubscribe = 1 // 订阅，成功就下发配置
	ApolloCfgReq_UNSUBSCRIBE   ApolloCfgReq_EnumSubscribe = 2 // 取消订阅
	ApolloCfgReq_NEED_RSP      ApolloCfgReq_EnumSubscribe = 4 // 要求回复，下发配置
	ApolloCfgReq_NO_RSP        ApolloCfgReq_EnumSubscribe = 8 // 不要回复，不下发配置
)

// Enum value maps for ApolloCfgReq_EnumSubscribe.
var (
	ApolloCfgReq_EnumSubscribe_name = map[int32]string{
		0: "NOT_SUBSCRIBE",
		1: "SUBSCRIBE",
		2: "UNSUBSCRIBE",
		4: "NEED_RSP",
		8: "NO_RSP",
	}
	ApolloCfgReq_EnumSubscribe_value = map[string]int32{
		"NOT_SUBSCRIBE": 0,
		"SUBSCRIBE":     1,
		"UNSUBSCRIBE":   2,
		"NEED_RSP":      4,
		"NO_RSP":        8,
	}
)

func (x ApolloCfgReq_EnumSubscribe) Enum() *ApolloCfgReq_EnumSubscribe {
	p := new(ApolloCfgReq_EnumSubscribe)
	*p = x
	return p
}

func (x ApolloCfgReq_EnumSubscribe) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApolloCfgReq_EnumSubscribe) Descriptor() protoreflect.EnumDescriptor {
	return file_config_proto_enumTypes[1].Descriptor()
}

func (ApolloCfgReq_EnumSubscribe) Type() protoreflect.EnumType {
	return &file_config_proto_enumTypes[1]
}

func (x ApolloCfgReq_EnumSubscribe) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ApolloCfgReq_EnumSubscribe) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ApolloCfgReq_EnumSubscribe(num)
	return nil
}

// Deprecated: Use ApolloCfgReq_EnumSubscribe.Descriptor instead.
func (ApolloCfgReq_EnumSubscribe) EnumDescriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0, 0}
}

//配置中心消息
type ApolloCfgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameSpace  *string `protobuf:"bytes,1,opt,name=name_space,json=nameSpace" json:"name_space,omitempty"`       // 要读取的配置的命名空间
	KeyName    *string `protobuf:"bytes,2,opt,name=key_name,json=keyName" json:"key_name,omitempty"`             // 键名 空表示命名空间下的所有键
	Subscribe  *uint32 `protobuf:"varint,3,opt,name=subscribe" json:"subscribe,omitempty"`                       // 是否订阅配置的更新 见EnumSubscribe
	AppType    *uint32 `protobuf:"varint,4,opt,name=app_type,json=appType" json:"app_type,omitempty"`            // AppType
	AppId      *uint32 `protobuf:"varint,5,opt,name=app_id,json=appId" json:"app_id,omitempty"`                  // AppID
	SubAppType *uint32 `protobuf:"varint,6,opt,name=sub_app_type,json=subAppType" json:"sub_app_type,omitempty"` // AppType
	SubAppId   *uint32 `protobuf:"varint,7,opt,name=sub_app_id,json=subAppId" json:"sub_app_id,omitempty"`       // AppID
	CfgSize    *uint32 `protobuf:"varint,8,opt,name=cfg_size,json=cfgSize" json:"cfg_size,omitempty"`            // 指定响应消息中配置的大小
}

func (x *ApolloCfgReq) Reset() {
	*x = ApolloCfgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApolloCfgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApolloCfgReq) ProtoMessage() {}

func (x *ApolloCfgReq) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApolloCfgReq.ProtoReflect.Descriptor instead.
func (*ApolloCfgReq) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

func (x *ApolloCfgReq) GetNameSpace() string {
	if x != nil && x.NameSpace != nil {
		return *x.NameSpace
	}
	return ""
}

func (x *ApolloCfgReq) GetKeyName() string {
	if x != nil && x.KeyName != nil {
		return *x.KeyName
	}
	return ""
}

func (x *ApolloCfgReq) GetSubscribe() uint32 {
	if x != nil && x.Subscribe != nil {
		return *x.Subscribe
	}
	return 0
}

func (x *ApolloCfgReq) GetAppType() uint32 {
	if x != nil && x.AppType != nil {
		return *x.AppType
	}
	return 0
}

func (x *ApolloCfgReq) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *ApolloCfgReq) GetSubAppType() uint32 {
	if x != nil && x.SubAppType != nil {
		return *x.SubAppType
	}
	return 0
}

func (x *ApolloCfgReq) GetSubAppId() uint32 {
	if x != nil && x.SubAppId != nil {
		return *x.SubAppId
	}
	return 0
}

func (x *ApolloCfgReq) GetCfgSize() uint32 {
	if x != nil && x.CfgSize != nil {
		return *x.CfgSize
	}
	return 0
}

//配置响应
type ApolloCfgRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameSpace  *string  `protobuf:"bytes,1,opt,name=name_space,json=nameSpace" json:"name_space,omitempty"`       // 要读取的配置的命名空间
	KeyName    *string  `protobuf:"bytes,2,opt,name=key_name,json=keyName" json:"key_name,omitempty"`             // 键名
	Key        []string `protobuf:"bytes,3,rep,name=key" json:"key,omitempty"`                                    // 键
	Value      []string `protobuf:"bytes,4,rep,name=value" json:"value,omitempty"`                                // 值
	SubAppType *uint32  `protobuf:"varint,5,opt,name=sub_app_type,json=subAppType" json:"sub_app_type,omitempty"` // AppType subscribe=0，或者=1时的第一个回包时会和请求的一样，否则为订阅信息中记录的值
	SubAppId   *uint32  `protobuf:"varint,6,opt,name=sub_app_id,json=subAppId" json:"sub_app_id,omitempty"`       // AppID subscribe=0，或者=1时的第一个回包时会和请求的一样，否则为订阅信息中记录的值
	PacketId   *uint64  `protobuf:"varint,7,opt,name=packet_id,json=packetId" json:"packet_id,omitempty"`         // 分包标识
}

func (x *ApolloCfgRsp) Reset() {
	*x = ApolloCfgRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApolloCfgRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApolloCfgRsp) ProtoMessage() {}

func (x *ApolloCfgRsp) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApolloCfgRsp.ProtoReflect.Descriptor instead.
func (*ApolloCfgRsp) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

func (x *ApolloCfgRsp) GetNameSpace() string {
	if x != nil && x.NameSpace != nil {
		return *x.NameSpace
	}
	return ""
}

func (x *ApolloCfgRsp) GetKeyName() string {
	if x != nil && x.KeyName != nil {
		return *x.KeyName
	}
	return ""
}

func (x *ApolloCfgRsp) GetKey() []string {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ApolloCfgRsp) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ApolloCfgRsp) GetSubAppType() uint32 {
	if x != nil && x.SubAppType != nil {
		return *x.SubAppType
	}
	return 0
}

func (x *ApolloCfgRsp) GetSubAppId() uint32 {
	if x != nil && x.SubAppId != nil {
		return *x.SubAppId
	}
	return 0
}

func (x *ApolloCfgRsp) GetPacketId() uint64 {
	if x != nil && x.PacketId != nil {
		return *x.PacketId
	}
	return 0
}

//配置响应完成
type ApolloCfgRspFin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameSpace  *string `protobuf:"bytes,1,opt,name=name_space,json=nameSpace" json:"name_space,omitempty"`       // 要读取的配置的命名空间
	KeyName    *string `protobuf:"bytes,2,opt,name=key_name,json=keyName" json:"key_name,omitempty"`             // 键名
	SubAppType *uint32 `protobuf:"varint,3,opt,name=sub_app_type,json=subAppType" json:"sub_app_type,omitempty"` // AppType
	SubAppId   *uint32 `protobuf:"varint,4,opt,name=sub_app_id,json=subAppId" json:"sub_app_id,omitempty"`       //
	PacketId   *uint64 `protobuf:"varint,5,req,name=packet_id,json=packetId" json:"packet_id,omitempty"`         // 分包标识
}

func (x *ApolloCfgRspFin) Reset() {
	*x = ApolloCfgRspFin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApolloCfgRspFin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApolloCfgRspFin) ProtoMessage() {}

func (x *ApolloCfgRspFin) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApolloCfgRspFin.ProtoReflect.Descriptor instead.
func (*ApolloCfgRspFin) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{2}
}

func (x *ApolloCfgRspFin) GetNameSpace() string {
	if x != nil && x.NameSpace != nil {
		return *x.NameSpace
	}
	return ""
}

func (x *ApolloCfgRspFin) GetKeyName() string {
	if x != nil && x.KeyName != nil {
		return *x.KeyName
	}
	return ""
}

func (x *ApolloCfgRspFin) GetSubAppType() uint32 {
	if x != nil && x.SubAppType != nil {
		return *x.SubAppType
	}
	return 0
}

func (x *ApolloCfgRspFin) GetSubAppId() uint32 {
	if x != nil && x.SubAppId != nil {
		return *x.SubAppId
	}
	return 0
}

func (x *ApolloCfgRspFin) GetPacketId() uint64 {
	if x != nil && x.PacketId != nil {
		return *x.PacketId
	}
	return 0
}

var File_config_proto protoreflect.FileDescriptor

var file_config_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x62, 0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xd1, 0x02, 0x0a, 0x0c, 0x41, 0x70,
	0x6f, 0x6c, 0x6c, 0x6f, 0x43, 0x66, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x41,
	0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x75, 0x62, 0x41,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x66, 0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x66, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x5c, 0x0a, 0x0d, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42,
	0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42,
	0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x52, 0x53, 0x50, 0x10,
	0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x08, 0x22, 0xcd, 0x01,
	0x0a, 0x0c, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x43, 0x66, 0x67, 0x52, 0x73, 0x70, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x41, 0x70, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0xa8, 0x01,
	0x0a, 0x0f, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x43, 0x66, 0x67, 0x52, 0x73, 0x70, 0x46, 0x69,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x73,
	0x75, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x2a, 0x4d, 0x0a, 0x0c, 0x43, 0x4d, 0x44, 0x49,
	0x44, 0x5f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x44, 0x41, 0x70,
	0x6f, 0x6c, 0x6c, 0x6f, 0x43, 0x66, 0x67, 0x52, 0x65, 0x71, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x49, 0x44, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x43, 0x66, 0x67, 0x52, 0x73, 0x70, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x49, 0x44, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x43, 0x66, 0x67, 0x52,
	0x73, 0x70, 0x46, 0x69, 0x6e, 0x10, 0x03, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67,
}

var (
	file_config_proto_rawDescOnce sync.Once
	file_config_proto_rawDescData = file_config_proto_rawDesc
)

func file_config_proto_rawDescGZIP() []byte {
	file_config_proto_rawDescOnce.Do(func() {
		file_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_proto_rawDescData)
	})
	return file_config_proto_rawDescData
}

var file_config_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_config_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_config_proto_goTypes = []interface{}{
	(CMDID_Config)(0),               // 0: bs.config.CMDID_Config
	(ApolloCfgReq_EnumSubscribe)(0), // 1: bs.config.ApolloCfgReq.EnumSubscribe
	(*ApolloCfgReq)(nil),            // 2: bs.config.ApolloCfgReq
	(*ApolloCfgRsp)(nil),            // 3: bs.config.ApolloCfgRsp
	(*ApolloCfgRspFin)(nil),         // 4: bs.config.ApolloCfgRspFin
}
var file_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_config_proto_init() }
func file_config_proto_init() {
	if File_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApolloCfgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApolloCfgRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApolloCfgRspFin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_proto_goTypes,
		DependencyIndexes: file_config_proto_depIdxs,
		EnumInfos:         file_config_proto_enumTypes,
		MessageInfos:      file_config_proto_msgTypes,
	}.Build()
	File_config_proto = out.File
	file_config_proto_rawDesc = nil
	file_config_proto_goTypes = nil
	file_config_proto_depIdxs = nil
}
