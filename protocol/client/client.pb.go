// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: client.proto

package client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	types "xlddz/protocol/types"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMDID_Client int32

const (
	CMDID_Client_IDLoginReq  CMDID_Client = 1 //登录请求
	CMDID_Client_IDLoginRsp  CMDID_Client = 2 //登录回复
	CMDID_Client_IDLogoutReq CMDID_Client = 3 //注销登录
	CMDID_Client_IDLogoutRsp CMDID_Client = 4 //注销登录
)

// Enum value maps for CMDID_Client.
var (
	CMDID_Client_name = map[int32]string{
		1: "IDLoginReq",
		2: "IDLoginRsp",
		3: "IDLogoutReq",
		4: "IDLogoutRsp",
	}
	CMDID_Client_value = map[string]int32{
		"IDLoginReq":  1,
		"IDLoginRsp":  2,
		"IDLogoutReq": 3,
		"IDLogoutRsp": 4,
	}
)

func (x CMDID_Client) Enum() *CMDID_Client {
	p := new(CMDID_Client)
	*p = x
	return p
}

func (x CMDID_Client) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMDID_Client) Descriptor() protoreflect.EnumDescriptor {
	return file_client_proto_enumTypes[0].Descriptor()
}

func (CMDID_Client) Type() protoreflect.EnumType {
	return &file_client_proto_enumTypes[0]
}

func (x CMDID_Client) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMDID_Client) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMDID_Client(num)
	return nil
}

// Deprecated: Use CMDID_Client.Descriptor instead.
func (CMDID_Client) EnumDescriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

type LoginReq_LoginAction int32

const (
	LoginReq_ByAccount  LoginReq_LoginAction = 0  //账号
	LoginReq_GuestLogin LoginReq_LoginAction = 2  //游客,即快速登录
	LoginReq_ByMobile   LoginReq_LoginAction = 3  //手机号
	LoginReq_ByThirdID  LoginReq_LoginAction = 4  //第三方ID
	LoginReq_ByGameID   LoginReq_LoginAction = 5  //GameID 数字ID
	LoginReq_Robot      LoginReq_LoginAction = 10 //机器人
)

// Enum value maps for LoginReq_LoginAction.
var (
	LoginReq_LoginAction_name = map[int32]string{
		0:  "ByAccount",
		2:  "GuestLogin",
		3:  "ByMobile",
		4:  "ByThirdID",
		5:  "ByGameID",
		10: "Robot",
	}
	LoginReq_LoginAction_value = map[string]int32{
		"ByAccount":  0,
		"GuestLogin": 2,
		"ByMobile":   3,
		"ByThirdID":  4,
		"ByGameID":   5,
		"Robot":      10,
	}
)

func (x LoginReq_LoginAction) Enum() *LoginReq_LoginAction {
	p := new(LoginReq_LoginAction)
	*p = x
	return p
}

func (x LoginReq_LoginAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginReq_LoginAction) Descriptor() protoreflect.EnumDescriptor {
	return file_client_proto_enumTypes[1].Descriptor()
}

func (LoginReq_LoginAction) Type() protoreflect.EnumType {
	return &file_client_proto_enumTypes[1]
}

func (x LoginReq_LoginAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LoginReq_LoginAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LoginReq_LoginAction(num)
	return nil
}

// Deprecated: Use LoginReq_LoginAction.Descriptor instead.
func (LoginReq_LoginAction) EnumDescriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0, 0}
}

//游客登录
type LoginReq_NetworkType int32

const (
	LoginReq_UNKWON   LoginReq_NetworkType = -1
	LoginReq_DIANXIN  LoginReq_NetworkType = 0 //电信
	LoginReq_YIDONG   LoginReq_NetworkType = 1 //移动
	LoginReq_LIANTONG LoginReq_NetworkType = 2 //联通
	LoginReq_WIFI     LoginReq_NetworkType = 3 //wifi
)

// Enum value maps for LoginReq_NetworkType.
var (
	LoginReq_NetworkType_name = map[int32]string{
		-1: "UNKWON",
		0:  "DIANXIN",
		1:  "YIDONG",
		2:  "LIANTONG",
		3:  "WIFI",
	}
	LoginReq_NetworkType_value = map[string]int32{
		"UNKWON":   -1,
		"DIANXIN":  0,
		"YIDONG":   1,
		"LIANTONG": 2,
		"WIFI":     3,
	}
)

func (x LoginReq_NetworkType) Enum() *LoginReq_NetworkType {
	p := new(LoginReq_NetworkType)
	*p = x
	return p
}

func (x LoginReq_NetworkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginReq_NetworkType) Descriptor() protoreflect.EnumDescriptor {
	return file_client_proto_enumTypes[2].Descriptor()
}

func (LoginReq_NetworkType) Type() protoreflect.EnumType {
	return &file_client_proto_enumTypes[2]
}

func (x LoginReq_NetworkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LoginReq_NetworkType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LoginReq_NetworkType(num)
	return nil
}

// Deprecated: Use LoginReq_NetworkType.Descriptor instead.
func (LoginReq_NetworkType) EnumDescriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0, 1}
}

// 登录结果
type LoginRsp_Result int32

const (
	LoginRsp_SUCCESS        LoginRsp_Result = 0    //成功
	LoginRsp_NOTEXIST       LoginRsp_Result = 1    //账号不存在
	LoginRsp_FROZEN         LoginRsp_Result = 2    //账号被冻结
	LoginRsp_FALSEPW        LoginRsp_Result = 3    //密码错误
	LoginRsp_NETERROR       LoginRsp_Result = 4    //网络异常
	LoginRsp_APPISBUSY      LoginRsp_Result = 5    //服务器忙，人数爆满
	LoginRsp_GUESTFORBID    LoginRsp_Result = 6    //禁止游客登录
	LoginRsp_CONNECTERROR   LoginRsp_Result = 7    //连接异常
	LoginRsp_VERSIONOLD     LoginRsp_Result = 8    //版本过低
	LoginRsp_NOMOREGUEST    LoginRsp_Result = 9    //游客分配失败
	LoginRsp_FREQUENTLY     LoginRsp_Result = 10   //所在ip登录过多
	LoginRsp_APPINITING     LoginRsp_Result = 11   //系统初始化，请稍后再试
	LoginRsp_SERVERERROR    LoginRsp_Result = 255  //服务端出错
	LoginRsp_UNKOWN         LoginRsp_Result = 1000 //未知错误
	LoginRsp_TOKEN_FAILED   LoginRsp_Result = 1001 //Token出错
	LoginRsp_TOKEN_EXPIRED  LoginRsp_Result = 1002 //token过期了
	LoginRsp_TOKEN_NOTMATCH LoginRsp_Result = 1003 //token与appid不匹配
)

// Enum value maps for LoginRsp_Result.
var (
	LoginRsp_Result_name = map[int32]string{
		0:    "SUCCESS",
		1:    "NOTEXIST",
		2:    "FROZEN",
		3:    "FALSEPW",
		4:    "NETERROR",
		5:    "APPISBUSY",
		6:    "GUESTFORBID",
		7:    "CONNECTERROR",
		8:    "VERSIONOLD",
		9:    "NOMOREGUEST",
		10:   "FREQUENTLY",
		11:   "APPINITING",
		255:  "SERVERERROR",
		1000: "UNKOWN",
		1001: "TOKEN_FAILED",
		1002: "TOKEN_EXPIRED",
		1003: "TOKEN_NOTMATCH",
	}
	LoginRsp_Result_value = map[string]int32{
		"SUCCESS":        0,
		"NOTEXIST":       1,
		"FROZEN":         2,
		"FALSEPW":        3,
		"NETERROR":       4,
		"APPISBUSY":      5,
		"GUESTFORBID":    6,
		"CONNECTERROR":   7,
		"VERSIONOLD":     8,
		"NOMOREGUEST":    9,
		"FREQUENTLY":     10,
		"APPINITING":     11,
		"SERVERERROR":    255,
		"UNKOWN":         1000,
		"TOKEN_FAILED":   1001,
		"TOKEN_EXPIRED":  1002,
		"TOKEN_NOTMATCH": 1003,
	}
)

func (x LoginRsp_Result) Enum() *LoginRsp_Result {
	p := new(LoginRsp_Result)
	*p = x
	return p
}

func (x LoginRsp_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginRsp_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_client_proto_enumTypes[3].Descriptor()
}

func (LoginRsp_Result) Type() protoreflect.EnumType {
	return &file_client_proto_enumTypes[3]
}

func (x LoginRsp_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LoginRsp_Result) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LoginRsp_Result(num)
	return nil
}

// Deprecated: Use LoginRsp_Result.Descriptor instead.
func (LoginRsp_Result) EnumDescriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1, 0}
}

type LogoutRsp_LogoutReason int32

const (
	LogoutRsp_Normal       LogoutRsp_LogoutReason = 0
	LogoutRsp_AnotherLogin LogoutRsp_LogoutReason = 1 //被顶号
)

// Enum value maps for LogoutRsp_LogoutReason.
var (
	LogoutRsp_LogoutReason_name = map[int32]string{
		0: "Normal",
		1: "AnotherLogin",
	}
	LogoutRsp_LogoutReason_value = map[string]int32{
		"Normal":       0,
		"AnotherLogin": 1,
	}
)

func (x LogoutRsp_LogoutReason) Enum() *LogoutRsp_LogoutReason {
	p := new(LogoutRsp_LogoutReason)
	*p = x
	return p
}

func (x LogoutRsp_LogoutReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogoutRsp_LogoutReason) Descriptor() protoreflect.EnumDescriptor {
	return file_client_proto_enumTypes[4].Descriptor()
}

func (LogoutRsp_LogoutReason) Type() protoreflect.EnumType {
	return &file_client_proto_enumTypes[4]
}

func (x LogoutRsp_LogoutReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LogoutRsp_LogoutReason) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LogoutRsp_LogoutReason(num)
	return nil
}

// Deprecated: Use LogoutRsp_LogoutReason.Descriptor instead.
func (LogoutRsp_LogoutReason) EnumDescriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3, 0}
}

//登录请求
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameKind        *uint32               `protobuf:"varint,1,opt,name=game_kind,json=gameKind" json:"game_kind,omitempty"`                                           //游戏种类
	ActionType      *LoginReq_LoginAction `protobuf:"varint,2,opt,name=action_type,json=actionType,enum=bs.client.LoginReq_LoginAction" json:"action_type,omitempty"` //登录类型
	BuildNo         *uint32               `protobuf:"varint,4,opt,name=build_no,json=buildNo" json:"build_no,omitempty"`
	MarketId        *uint32               `protobuf:"varint,5,opt,name=market_id,json=marketId" json:"market_id,omitempty"`
	GameId          *uint64               `protobuf:"varint,6,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	LoginAccount    *string               `protobuf:"bytes,7,opt,name=login_account,json=loginAccount" json:"login_account,omitempty"`               //用户账号
	LoginPassword   *string               `protobuf:"bytes,8,opt,name=login_password,json=loginPassword" json:"login_password,omitempty"`            //用户密码
	ClientVersion   *string               `protobuf:"bytes,9,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`            //客户端版本号
	Client_IP       *string               `protobuf:"bytes,10,opt,name=client_IP,json=clientIP" json:"client_IP,omitempty"`                          //客户端IP
	SystemVersion   *string               `protobuf:"bytes,11,opt,name=system_version,json=systemVersion" json:"system_version,omitempty"`           //操作系统版本号
	BiosSerial      *string               `protobuf:"bytes,12,opt,name=bios_serial,json=biosSerial" json:"bios_serial,omitempty"`                    //BIOS序列号
	CpuSerial       *string               `protobuf:"bytes,13,opt,name=cpu_serial,json=cpuSerial" json:"cpu_serial,omitempty"`                       //CPU序列号
	HDSerial        *string               `protobuf:"bytes,14,opt,name=HD_serial,json=HDSerial" json:"HD_serial,omitempty"`                          //硬盘序列号
	MACAddress      *string               `protobuf:"bytes,15,opt,name=MAC_address,json=MACAddress" json:"MAC_address,omitempty"`                    //MAC地址
	ProtectData     *string               `protobuf:"bytes,16,opt,name=protect_data,json=protectData" json:"protect_data,omitempty"`                 //保护数据
	ChannelId       *uint32               `protobuf:"varint,17,opt,name=channel_id,json=channelId" json:"channel_id,omitempty"`                      //主渠道id
	SiteId          *uint32               `protobuf:"varint,18,opt,name=site_id,json=siteId" json:"site_id,omitempty"`                               //子渠道id
	BarId           *uint32               `protobuf:"varint,19,opt,name=bar_id,json=barId" json:"bar_id,omitempty"`                                  //网吧id
	GUID            *string               `protobuf:"bytes,20,opt,name=GUID" json:"GUID,omitempty"`                                                  //GUID
	LogonToken      *uint32               `protobuf:"varint,21,opt,name=logon_token,json=logonToken" json:"logon_token,omitempty"`                   //登录令牌
	MobileCode      *string               `protobuf:"bytes,22,opt,name=mobile_code,json=mobileCode" json:"mobile_code,omitempty"`                    //手机唯一标识
	OsVersion       *string               `protobuf:"bytes,23,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`                       //系统版本号
	SpId            *LoginReq_NetworkType `protobuf:"varint,24,opt,name=sp_id,json=spId,enum=bs.client.LoginReq_NetworkType" json:"sp_id,omitempty"` //使用的网络类型
	CustomFace      *string               `protobuf:"bytes,25,opt,name=custom_face,json=customFace" json:"custom_face,omitempty"`                    //自定义头像的地址
	UserCenterToken *string               `protobuf:"bytes,26,opt,name=user_center_token,json=userCenterToken" json:"user_center_token,omitempty"`   //接入用户中心的token
	UserId          *uint64               `protobuf:"varint,27,opt,name=user_id,json=userId" json:"user_id,omitempty"`                               //当接入用户中心后，终端在登陆时是可以知道用户ID的，要将这个值传上来
	LoginAppId      *uint64               `protobuf:"varint,28,opt,name=login_app_id,json=loginAppId" json:"login_app_id,omitempty"`                 // 登陆的appid
	ClientCode      *string               `protobuf:"bytes,29,opt,name=client_code,json=clientCode" json:"client_code,omitempty"`                    //client_code
	PackageName     *string               `protobuf:"bytes,30,opt,name=package_name,json=packageName" json:"package_name,omitempty"`                 //包名(手机版使用)
	LoginWays       *string               `protobuf:"bytes,31,opt,name=login_ways,json=loginWays" json:"login_ways,omitempty"`                       //登录方式(91account,phonenumber,xiaomi,vivo,oppo,huawei,weixin,weibo,alipay...)
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

func (x *LoginReq) GetGameKind() uint32 {
	if x != nil && x.GameKind != nil {
		return *x.GameKind
	}
	return 0
}

func (x *LoginReq) GetActionType() LoginReq_LoginAction {
	if x != nil && x.ActionType != nil {
		return *x.ActionType
	}
	return LoginReq_ByAccount
}

func (x *LoginReq) GetBuildNo() uint32 {
	if x != nil && x.BuildNo != nil {
		return *x.BuildNo
	}
	return 0
}

func (x *LoginReq) GetMarketId() uint32 {
	if x != nil && x.MarketId != nil {
		return *x.MarketId
	}
	return 0
}

func (x *LoginReq) GetGameId() uint64 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *LoginReq) GetLoginAccount() string {
	if x != nil && x.LoginAccount != nil {
		return *x.LoginAccount
	}
	return ""
}

func (x *LoginReq) GetLoginPassword() string {
	if x != nil && x.LoginPassword != nil {
		return *x.LoginPassword
	}
	return ""
}

func (x *LoginReq) GetClientVersion() string {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return ""
}

func (x *LoginReq) GetClient_IP() string {
	if x != nil && x.Client_IP != nil {
		return *x.Client_IP
	}
	return ""
}

func (x *LoginReq) GetSystemVersion() string {
	if x != nil && x.SystemVersion != nil {
		return *x.SystemVersion
	}
	return ""
}

func (x *LoginReq) GetBiosSerial() string {
	if x != nil && x.BiosSerial != nil {
		return *x.BiosSerial
	}
	return ""
}

func (x *LoginReq) GetCpuSerial() string {
	if x != nil && x.CpuSerial != nil {
		return *x.CpuSerial
	}
	return ""
}

func (x *LoginReq) GetHDSerial() string {
	if x != nil && x.HDSerial != nil {
		return *x.HDSerial
	}
	return ""
}

func (x *LoginReq) GetMACAddress() string {
	if x != nil && x.MACAddress != nil {
		return *x.MACAddress
	}
	return ""
}

func (x *LoginReq) GetProtectData() string {
	if x != nil && x.ProtectData != nil {
		return *x.ProtectData
	}
	return ""
}

func (x *LoginReq) GetChannelId() uint32 {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return 0
}

func (x *LoginReq) GetSiteId() uint32 {
	if x != nil && x.SiteId != nil {
		return *x.SiteId
	}
	return 0
}

func (x *LoginReq) GetBarId() uint32 {
	if x != nil && x.BarId != nil {
		return *x.BarId
	}
	return 0
}

func (x *LoginReq) GetGUID() string {
	if x != nil && x.GUID != nil {
		return *x.GUID
	}
	return ""
}

func (x *LoginReq) GetLogonToken() uint32 {
	if x != nil && x.LogonToken != nil {
		return *x.LogonToken
	}
	return 0
}

func (x *LoginReq) GetMobileCode() string {
	if x != nil && x.MobileCode != nil {
		return *x.MobileCode
	}
	return ""
}

func (x *LoginReq) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *LoginReq) GetSpId() LoginReq_NetworkType {
	if x != nil && x.SpId != nil {
		return *x.SpId
	}
	return LoginReq_UNKWON
}

func (x *LoginReq) GetCustomFace() string {
	if x != nil && x.CustomFace != nil {
		return *x.CustomFace
	}
	return ""
}

func (x *LoginReq) GetUserCenterToken() string {
	if x != nil && x.UserCenterToken != nil {
		return *x.UserCenterToken
	}
	return ""
}

func (x *LoginReq) GetUserId() uint64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *LoginReq) GetLoginAppId() uint64 {
	if x != nil && x.LoginAppId != nil {
		return *x.LoginAppId
	}
	return 0
}

func (x *LoginReq) GetClientCode() string {
	if x != nil && x.ClientCode != nil {
		return *x.ClientCode
	}
	return ""
}

func (x *LoginReq) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *LoginReq) GetLoginWays() string {
	if x != nil && x.LoginWays != nil {
		return *x.LoginWays
	}
	return ""
}

// 登录回复
type LoginRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginResult *LoginRsp_Result    `protobuf:"varint,1,opt,name=login_result,json=loginResult,enum=bs.client.LoginRsp_Result" json:"login_result,omitempty"` //登录结果
	LoginInfo   *string             `protobuf:"bytes,2,opt,name=login_info,json=loginInfo" json:"login_info,omitempty"`                                       //登录失败时的提示信息
	BaseInfo    *types.BaseUserInfo `protobuf:"bytes,3,opt,name=base_info,json=baseInfo" json:"base_info,omitempty"`                                          //成功后的基本信息
}

func (x *LoginRsp) Reset() {
	*x = LoginRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRsp) ProtoMessage() {}

func (x *LoginRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRsp.ProtoReflect.Descriptor instead.
func (*LoginRsp) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

func (x *LoginRsp) GetLoginResult() LoginRsp_Result {
	if x != nil && x.LoginResult != nil {
		return *x.LoginResult
	}
	return LoginRsp_SUCCESS
}

func (x *LoginRsp) GetLoginInfo() string {
	if x != nil && x.LoginInfo != nil {
		return *x.LoginInfo
	}
	return ""
}

func (x *LoginRsp) GetBaseInfo() *types.BaseUserInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

// 注销登录
type LogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *uint64 `protobuf:"varint,1,req,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (x *LogoutReq) Reset() {
	*x = LogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReq) ProtoMessage() {}

func (x *LogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReq.ProtoReflect.Descriptor instead.
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{2}
}

func (x *LogoutReq) GetUserId() uint64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

// 注销登录
type LogoutRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogoutReason *LogoutRsp_LogoutReason `protobuf:"varint,1,opt,name=logout_reason,json=logoutReason,enum=bs.client.LogoutRsp_LogoutReason" json:"logout_reason,omitempty"`
	ReasonInfo   *string                 `protobuf:"bytes,2,opt,name=reason_info,json=reasonInfo" json:"reason_info,omitempty"`
}

func (x *LogoutRsp) Reset() {
	*x = LogoutRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRsp) ProtoMessage() {}

func (x *LogoutRsp) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRsp.ProtoReflect.Descriptor instead.
func (*LogoutRsp) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3}
}

func (x *LogoutRsp) GetLogoutReason() LogoutRsp_LogoutReason {
	if x != nil && x.LogoutReason != nil {
		return *x.LogoutReason
	}
	return LogoutRsp_Normal
}

func (x *LogoutRsp) GetReasonInfo() string {
	if x != nil && x.ReasonInfo != nil {
		return *x.ReasonInfo
	}
	return ""
}

var File_client_proto protoreflect.FileDescriptor

var file_client_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x62, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x09, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4b, 0x69, 0x6e, 0x64,
	0x12, 0x40, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x49, 0x50, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x50, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69,
	0x6f, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x62, 0x69, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x70, 0x75, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x70, 0x75, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x48, 0x44,
	0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48,
	0x44, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x4d, 0x41, 0x43, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x41,
	0x43, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x69, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x61, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x55,
	0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x47, 0x55, 0x49, 0x44, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x34, 0x0a, 0x05, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x62, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x73, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x66, 0x61, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x77, 0x61, 0x79, 0x73, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x61, 0x79, 0x73,
	0x22, 0x62, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0d, 0x0a, 0x09, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x47, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x42, 0x79, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09,
	0x42, 0x79, 0x54, 0x68, 0x69, 0x72, 0x64, 0x49, 0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x42,
	0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x10, 0x0a, 0x22, 0x53, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x06, 0x55, 0x4e, 0x4b, 0x57, 0x4f, 0x4e, 0x10, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x41, 0x4e,
	0x58, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x49, 0x44, 0x4f, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x41, 0x4e, 0x54, 0x4f, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x57, 0x49, 0x46, 0x49, 0x10, 0x03, 0x22, 0xb8, 0x03, 0x0a, 0x08, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62,
	0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73,
	0x70, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x46, 0x52, 0x4f, 0x5a, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46,
	0x41, 0x4c, 0x53, 0x45, 0x50, 0x57, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x45, 0x54, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x50, 0x50, 0x49, 0x53, 0x42,
	0x55, 0x53, 0x59, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x55, 0x45, 0x53, 0x54, 0x46, 0x4f,
	0x52, 0x42, 0x49, 0x44, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x45, 0x52, 0x53,
	0x49, 0x4f, 0x4e, 0x4f, 0x4c, 0x44, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x4d, 0x4f,
	0x52, 0x45, 0x47, 0x55, 0x45, 0x53, 0x54, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x4e, 0x54, 0x4c, 0x59, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x50, 0x50,
	0x49, 0x4e, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x45, 0x52,
	0x56, 0x45, 0x52, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xff, 0x01, 0x12, 0x0b, 0x0a, 0x06, 0x55,
	0x4e, 0x4b, 0x4f, 0x57, 0x4e, 0x10, 0xe8, 0x07, 0x12, 0x11, 0x0a, 0x0c, 0x54, 0x4f, 0x4b, 0x45,
	0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xe9, 0x07, 0x12, 0x12, 0x0a, 0x0d, 0x54,
	0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0xea, 0x07, 0x12,
	0x13, 0x0a, 0x0e, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x4d, 0x41, 0x54, 0x43,
	0x48, 0x10, 0xeb, 0x07, 0x22, 0x24, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x09, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x62, 0x73, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x52, 0x73, 0x70, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x2c, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x41, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x01, 0x2a,
	0x50, 0x0a, 0x0c, 0x43, 0x4d, 0x44, 0x49, 0x44, 0x5f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x0a, 0x49, 0x44, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x49, 0x44, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x73, 0x70, 0x10, 0x02, 0x12,
	0x0f, 0x0a, 0x0b, 0x49, 0x44, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x44, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x73, 0x70, 0x10,
	0x04, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
}

var (
	file_client_proto_rawDescOnce sync.Once
	file_client_proto_rawDescData = file_client_proto_rawDesc
)

func file_client_proto_rawDescGZIP() []byte {
	file_client_proto_rawDescOnce.Do(func() {
		file_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_proto_rawDescData)
	})
	return file_client_proto_rawDescData
}

var file_client_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_client_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_client_proto_goTypes = []interface{}{
	(CMDID_Client)(0),           // 0: bs.client.CMDID_Client
	(LoginReq_LoginAction)(0),   // 1: bs.client.LoginReq.LoginAction
	(LoginReq_NetworkType)(0),   // 2: bs.client.LoginReq.NetworkType
	(LoginRsp_Result)(0),        // 3: bs.client.LoginRsp.Result
	(LogoutRsp_LogoutReason)(0), // 4: bs.client.LogoutRsp.LogoutReason
	(*LoginReq)(nil),            // 5: bs.client.LoginReq
	(*LoginRsp)(nil),            // 6: bs.client.LoginRsp
	(*LogoutReq)(nil),           // 7: bs.client.LogoutReq
	(*LogoutRsp)(nil),           // 8: bs.client.LogoutRsp
	(*types.BaseUserInfo)(nil),  // 9: bs.types.BaseUserInfo
}
var file_client_proto_depIdxs = []int32{
	1, // 0: bs.client.LoginReq.action_type:type_name -> bs.client.LoginReq.LoginAction
	2, // 1: bs.client.LoginReq.sp_id:type_name -> bs.client.LoginReq.NetworkType
	3, // 2: bs.client.LoginRsp.login_result:type_name -> bs.client.LoginRsp.Result
	9, // 3: bs.client.LoginRsp.base_info:type_name -> bs.types.BaseUserInfo
	4, // 4: bs.client.LogoutRsp.logout_reason:type_name -> bs.client.LogoutRsp.LogoutReason
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_client_proto_init() }
func file_client_proto_init() {
	if File_client_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_proto_goTypes,
		DependencyIndexes: file_client_proto_depIdxs,
		EnumInfos:         file_client_proto_enumTypes,
		MessageInfos:      file_client_proto_msgTypes,
	}.Build()
	File_client_proto = out.File
	file_client_proto_rawDesc = nil
	file_client_proto_goTypes = nil
	file_client_proto_depIdxs = nil
}
