// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: router/router.proto

package router

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMDID_Router int32

const (
	CMDID_Router_IDAppRegReq      CMDID_Router = 1 //服务注册
	CMDID_Router_IDAppRegRsp      CMDID_Router = 2 //服务注册
	CMDID_Router_IDAppState       CMDID_Router = 3 //服务状态
	CMDID_Router_IDDataMessageReq CMDID_Router = 4 //消息转发
	CMDID_Router_IDDataMessageRsp CMDID_Router = 5 //消息转发
	CMDID_Router_IDPulseNotify    CMDID_Router = 6 //服务心跳
	CMDID_Router_IDAppOfflineReq  CMDID_Router = 7 //服务离线
	CMDID_Router_IDAppUpdateReq   CMDID_Router = 8 //更新请求
	CMDID_Router_IDLast           CMDID_Router = 10
)

// Enum value maps for CMDID_Router.
var (
	CMDID_Router_name = map[int32]string{
		1:  "IDAppRegReq",
		2:  "IDAppRegRsp",
		3:  "IDAppState",
		4:  "IDDataMessageReq",
		5:  "IDDataMessageRsp",
		6:  "IDPulseNotify",
		7:  "IDAppOfflineReq",
		8:  "IDAppUpdateReq",
		10: "IDLast",
	}
	CMDID_Router_value = map[string]int32{
		"IDAppRegReq":      1,
		"IDAppRegRsp":      2,
		"IDAppState":       3,
		"IDDataMessageReq": 4,
		"IDDataMessageRsp": 5,
		"IDPulseNotify":    6,
		"IDAppOfflineReq":  7,
		"IDAppUpdateReq":   8,
		"IDLast":           10,
	}
)

func (x CMDID_Router) Enum() *CMDID_Router {
	p := new(CMDID_Router)
	*p = x
	return p
}

func (x CMDID_Router) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMDID_Router) Descriptor() protoreflect.EnumDescriptor {
	return file_router_router_proto_enumTypes[0].Descriptor()
}

func (CMDID_Router) Type() protoreflect.EnumType {
	return &file_router_router_proto_enumTypes[0]
}

func (x CMDID_Router) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMDID_Router) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMDID_Router(num)
	return nil
}

// Deprecated: Use CMDID_Router.Descriptor instead.
func (CMDID_Router) EnumDescriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{0}
}

//转发方向
type EnuDataDirection int32

const (
	EnuDataDirection_DT_App2App    EnuDataDirection = 0 //从一个app转到另一个app
	EnuDataDirection_DT_Client2App EnuDataDirection = 1 //从客户端转到app
	EnuDataDirection_DT_App2Client EnuDataDirection = 2 //从app转到client
)

// Enum value maps for EnuDataDirection.
var (
	EnuDataDirection_name = map[int32]string{
		0: "DT_App2App",
		1: "DT_Client2App",
		2: "DT_App2Client",
	}
	EnuDataDirection_value = map[string]int32{
		"DT_App2App":    0,
		"DT_Client2App": 1,
		"DT_App2Client": 2,
	}
)

func (x EnuDataDirection) Enum() *EnuDataDirection {
	p := new(EnuDataDirection)
	*p = x
	return p
}

func (x EnuDataDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnuDataDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_router_router_proto_enumTypes[1].Descriptor()
}

func (EnuDataDirection) Type() protoreflect.EnumType {
	return &file_router_router_proto_enumTypes[1]
}

func (x EnuDataDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EnuDataDirection) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EnuDataDirection(num)
	return nil
}

// Deprecated: Use EnuDataDirection.Descriptor instead.
func (EnuDataDirection) EnumDescriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{1}
}

type AppStateNotifyState int32

const (
	AppStateNotify_Online   AppStateNotifyState = 1
	AppStateNotify_ReOnline AppStateNotifyState = 2
	AppStateNotify_OffLine  AppStateNotifyState = 3
)

// Enum value maps for AppStateNotifyState.
var (
	AppStateNotifyState_name = map[int32]string{
		1: "Online",
		2: "ReOnline",
		3: "OffLine",
	}
	AppStateNotifyState_value = map[string]int32{
		"Online":   1,
		"ReOnline": 2,
		"OffLine":  3,
	}
)

func (x AppStateNotifyState) Enum() *AppStateNotifyState {
	p := new(AppStateNotifyState)
	*p = x
	return p
}

func (x AppStateNotifyState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppStateNotifyState) Descriptor() protoreflect.EnumDescriptor {
	return file_router_router_proto_enumTypes[2].Descriptor()
}

func (AppStateNotifyState) Type() protoreflect.EnumType {
	return &file_router_router_proto_enumTypes[2]
}

func (x AppStateNotifyState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AppStateNotifyState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AppStateNotifyState(num)
	return nil
}

// Deprecated: Use AppStateNotifyState.Descriptor instead.
func (AppStateNotifyState) EnumDescriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{3, 0}
}

type AppPulseNotify_PulseAction int32

const (
	AppPulseNotify_HeartBeatReq AppPulseNotify_PulseAction = 0
	AppPulseNotify_HeartBeatRsp AppPulseNotify_PulseAction = 1
	AppPulseNotify_LogoutReq    AppPulseNotify_PulseAction = 2
	AppPulseNotify_LogoutRsp    AppPulseNotify_PulseAction = 3
	AppPulseNotify_AnotherLogin AppPulseNotify_PulseAction = 5 //顶掉了。
)

// Enum value maps for AppPulseNotify_PulseAction.
var (
	AppPulseNotify_PulseAction_name = map[int32]string{
		0: "HeartBeatReq",
		1: "HeartBeatRsp",
		2: "LogoutReq",
		3: "LogoutRsp",
		5: "AnotherLogin",
	}
	AppPulseNotify_PulseAction_value = map[string]int32{
		"HeartBeatReq": 0,
		"HeartBeatRsp": 1,
		"LogoutReq":    2,
		"LogoutRsp":    3,
		"AnotherLogin": 5,
	}
)

func (x AppPulseNotify_PulseAction) Enum() *AppPulseNotify_PulseAction {
	p := new(AppPulseNotify_PulseAction)
	*p = x
	return p
}

func (x AppPulseNotify_PulseAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppPulseNotify_PulseAction) Descriptor() protoreflect.EnumDescriptor {
	return file_router_router_proto_enumTypes[3].Descriptor()
}

func (AppPulseNotify_PulseAction) Type() protoreflect.EnumType {
	return &file_router_router_proto_enumTypes[3]
}

func (x AppPulseNotify_PulseAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AppPulseNotify_PulseAction) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AppPulseNotify_PulseAction(num)
	return nil
}

// Deprecated: Use AppPulseNotify_PulseAction.Descriptor instead.
func (AppPulseNotify_PulseAction) EnumDescriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{4, 0}
}

type AppUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogAddr *string `protobuf:"bytes,1,opt,name=log_addr,json=logAddr" json:"log_addr,omitempty"` // 日志地址信息(log_ip:port,log_level)
}

func (x *AppUpdateReq) Reset() {
	*x = AppUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppUpdateReq) ProtoMessage() {}

func (x *AppUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppUpdateReq.ProtoReflect.Descriptor instead.
func (*AppUpdateReq) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{0}
}

func (x *AppUpdateReq) GetLogAddr() string {
	if x != nil && x.LogAddr != nil {
		return *x.LogAddr
	}
	return ""
}

//服务注册
type RegisterAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthKey    *string `protobuf:"bytes,1,req,name=auth_key,json=authKey" json:"auth_key,omitempty"`
	AttData    *string `protobuf:"bytes,2,opt,name=att_data,json=attData" json:"att_data,omitempty"`
	MyAddress  *string `protobuf:"bytes,3,opt,name=my_address,json=myAddress" json:"my_address,omitempty"`
	AppType    *uint32 `protobuf:"varint,4,opt,name=app_type,json=appType" json:"app_type,omitempty"` //Router 或其他
	AppId      *uint32 `protobuf:"varint,5,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	ReregToken *string `protobuf:"bytes,6,opt,name=rereg_token,json=reregToken" json:"rereg_token,omitempty"` //如果中间网络断开了,可以使用rereg_token强行再次注册
	AppName    *string `protobuf:"bytes,7,opt,name=app_name,json=appName" json:"app_name,omitempty"`          //app的名称(一般为进程名)
}

func (x *RegisterAppReq) Reset() {
	*x = RegisterAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAppReq) ProtoMessage() {}

func (x *RegisterAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAppReq.ProtoReflect.Descriptor instead.
func (*RegisterAppReq) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterAppReq) GetAuthKey() string {
	if x != nil && x.AuthKey != nil {
		return *x.AuthKey
	}
	return ""
}

func (x *RegisterAppReq) GetAttData() string {
	if x != nil && x.AttData != nil {
		return *x.AttData
	}
	return ""
}

func (x *RegisterAppReq) GetMyAddress() string {
	if x != nil && x.MyAddress != nil {
		return *x.MyAddress
	}
	return ""
}

func (x *RegisterAppReq) GetAppType() uint32 {
	if x != nil && x.AppType != nil {
		return *x.AppType
	}
	return 0
}

func (x *RegisterAppReq) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *RegisterAppReq) GetReregToken() string {
	if x != nil && x.ReregToken != nil {
		return *x.ReregToken
	}
	return ""
}

func (x *RegisterAppReq) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

//服务注册
type RegisterAppRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegResult  *uint32 `protobuf:"varint,1,req,name=reg_result,json=regResult" json:"reg_result,omitempty"`   //0表示成功，其它为错误码(rereg_token为出错内容)
	ReregToken *string `protobuf:"bytes,2,opt,name=rereg_token,json=reregToken" json:"rereg_token,omitempty"` //如果中间网络断开了,可以使用rereg_token强行再次注册
	RouterId   *uint32 `protobuf:"varint,3,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	LoadData   *uint32 `protobuf:"varint,4,opt,name=load_data,json=loadData" json:"load_data,omitempty"`
}

func (x *RegisterAppRsp) Reset() {
	*x = RegisterAppRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAppRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAppRsp) ProtoMessage() {}

func (x *RegisterAppRsp) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAppRsp.ProtoReflect.Descriptor instead.
func (*RegisterAppRsp) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterAppRsp) GetRegResult() uint32 {
	if x != nil && x.RegResult != nil {
		return *x.RegResult
	}
	return 0
}

func (x *RegisterAppRsp) GetReregToken() string {
	if x != nil && x.ReregToken != nil {
		return *x.ReregToken
	}
	return ""
}

func (x *RegisterAppRsp) GetRouterId() uint32 {
	if x != nil && x.RouterId != nil {
		return *x.RouterId
	}
	return 0
}

func (x *RegisterAppRsp) GetLoadData() uint32 {
	if x != nil && x.LoadData != nil {
		return *x.LoadData
	}
	return 0
}

//服务状态
type AppStateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppState *uint32 `protobuf:"varint,1,req,name=app_state,json=appState" json:"app_state,omitempty"`
	RouterId *uint32 `protobuf:"varint,2,opt,name=router_id,json=routerId" json:"router_id,omitempty"` //所连的router id
	AppType  *uint32 `protobuf:"varint,4,opt,name=app_type,json=appType" json:"app_type,omitempty"`
	AppId    *uint32 `protobuf:"varint,5,opt,name=app_id,json=appId" json:"app_id,omitempty"`
}

func (x *AppStateNotify) Reset() {
	*x = AppStateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppStateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppStateNotify) ProtoMessage() {}

func (x *AppStateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppStateNotify.ProtoReflect.Descriptor instead.
func (*AppStateNotify) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{3}
}

func (x *AppStateNotify) GetAppState() uint32 {
	if x != nil && x.AppState != nil {
		return *x.AppState
	}
	return 0
}

func (x *AppStateNotify) GetRouterId() uint32 {
	if x != nil && x.RouterId != nil {
		return *x.RouterId
	}
	return 0
}

func (x *AppStateNotify) GetAppType() uint32 {
	if x != nil && x.AppType != nil {
		return *x.AppType
	}
	return 0
}

func (x *AppStateNotify) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

//服务心跳
type AppPulseNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *AppPulseNotify_PulseAction `protobuf:"varint,1,req,name=action,enum=bs.router.AppPulseNotify_PulseAction" json:"action,omitempty"`
	//发送的心跳数据
	PulseData *uint64 `protobuf:"varint,2,opt,name=pulse_data,json=pulseData" json:"pulse_data,omitempty"`
	//10万-(最近10万条报文，花了多少ms,ms>10万，则ms=10万)
	//load_data 越小表示负载越低
	//如果当前报文数，不到10万，则load_data为1000
	//每报文数量超过10万，则自动更新load_data,累计最近10次的load_data发回去。
	LoadData *uint32 `protobuf:"varint,3,opt,name=load_data,json=loadData" json:"load_data,omitempty"`
}

func (x *AppPulseNotify) Reset() {
	*x = AppPulseNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPulseNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPulseNotify) ProtoMessage() {}

func (x *AppPulseNotify) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPulseNotify.ProtoReflect.Descriptor instead.
func (*AppPulseNotify) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{4}
}

func (x *AppPulseNotify) GetAction() AppPulseNotify_PulseAction {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return AppPulseNotify_HeartBeatReq
}

func (x *AppPulseNotify) GetPulseData() uint64 {
	if x != nil && x.PulseData != nil {
		return *x.PulseData
	}
	return 0
}

func (x *AppPulseNotify) GetLoadData() uint32 {
	if x != nil && x.LoadData != nil {
		return *x.LoadData
	}
	return 0
}

//消息转发
type DataTransferReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcApptype    *uint32 `protobuf:"varint,1,opt,name=src_apptype,json=srcApptype" json:"src_apptype,omitempty"`           //源app
	SrcAppid      *uint32 `protobuf:"varint,2,opt,name=src_appid,json=srcAppid" json:"src_appid,omitempty"`                 //源app_id
	DestApptype   *uint32 `protobuf:"varint,3,opt,name=dest_apptype,json=destApptype" json:"dest_apptype,omitempty"`        //目标app  如果为0则是any,=1 表示所有,其他表示特定的
	DestAppid     *uint32 `protobuf:"varint,4,opt,name=dest_appid,json=destAppid" json:"dest_appid,omitempty"`              //目标appID,如果为0则是随机,=1 表示所有，其他表示特定
	DataBuff      []byte  `protobuf:"bytes,5,opt,name=data_buff,json=dataBuff" json:"data_buff,omitempty"`                  //要发送的数据
	IdReq         *uint32 `protobuf:"varint,6,opt,name=id_req,json=idReq" json:"id_req,omitempty"`                          //转发ID
	DataCmdkind   *uint32 `protobuf:"varint,7,opt,name=data_cmdkind,json=dataCmdkind" json:"data_cmdkind,omitempty"`        //打包了的命令大类
	DataCmdsubid  *uint32 `protobuf:"varint,8,opt,name=data_cmdsubid,json=dataCmdsubid" json:"data_cmdsubid,omitempty"`     //打包了的命令小类
	DataDirection *uint32 `protobuf:"varint,9,opt,name=data_direction,json=dataDirection" json:"data_direction,omitempty"`  //转发类型
	AttUserid     *uint64 `protobuf:"varint,10,opt,name=att_userid,json=attUserid" json:"att_userid,omitempty"`             //关联的用户ID
	AttGateconnid *uint64 `protobuf:"varint,11,opt,name=att_gateconnid,json=attGateconnid" json:"att_gateconnid,omitempty"` //关联的gate连接id
	AttGateid     *uint32 `protobuf:"varint,12,opt,name=att_gateid,json=attGateid" json:"att_gateid,omitempty"`             //关联的gate_id
	AttSessionid  *uint64 `protobuf:"varint,13,opt,name=att_sessionid,json=attSessionid" json:"att_sessionid,omitempty"`    //关联的session id
	ClientIp      *uint32 `protobuf:"varint,14,opt,name=client_ip,json=clientIp" json:"client_ip,omitempty"`                //如果是来自于那个gate的话，则需要带上这个ip
}

func (x *DataTransferReq) Reset() {
	*x = DataTransferReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataTransferReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTransferReq) ProtoMessage() {}

func (x *DataTransferReq) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTransferReq.ProtoReflect.Descriptor instead.
func (*DataTransferReq) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{5}
}

func (x *DataTransferReq) GetSrcApptype() uint32 {
	if x != nil && x.SrcApptype != nil {
		return *x.SrcApptype
	}
	return 0
}

func (x *DataTransferReq) GetSrcAppid() uint32 {
	if x != nil && x.SrcAppid != nil {
		return *x.SrcAppid
	}
	return 0
}

func (x *DataTransferReq) GetDestApptype() uint32 {
	if x != nil && x.DestApptype != nil {
		return *x.DestApptype
	}
	return 0
}

func (x *DataTransferReq) GetDestAppid() uint32 {
	if x != nil && x.DestAppid != nil {
		return *x.DestAppid
	}
	return 0
}

func (x *DataTransferReq) GetDataBuff() []byte {
	if x != nil {
		return x.DataBuff
	}
	return nil
}

func (x *DataTransferReq) GetIdReq() uint32 {
	if x != nil && x.IdReq != nil {
		return *x.IdReq
	}
	return 0
}

func (x *DataTransferReq) GetDataCmdkind() uint32 {
	if x != nil && x.DataCmdkind != nil {
		return *x.DataCmdkind
	}
	return 0
}

func (x *DataTransferReq) GetDataCmdsubid() uint32 {
	if x != nil && x.DataCmdsubid != nil {
		return *x.DataCmdsubid
	}
	return 0
}

func (x *DataTransferReq) GetDataDirection() uint32 {
	if x != nil && x.DataDirection != nil {
		return *x.DataDirection
	}
	return 0
}

func (x *DataTransferReq) GetAttUserid() uint64 {
	if x != nil && x.AttUserid != nil {
		return *x.AttUserid
	}
	return 0
}

func (x *DataTransferReq) GetAttGateconnid() uint64 {
	if x != nil && x.AttGateconnid != nil {
		return *x.AttGateconnid
	}
	return 0
}

func (x *DataTransferReq) GetAttGateid() uint32 {
	if x != nil && x.AttGateid != nil {
		return *x.AttGateid
	}
	return 0
}

func (x *DataTransferReq) GetAttSessionid() uint64 {
	if x != nil && x.AttSessionid != nil {
		return *x.AttSessionid
	}
	return 0
}

func (x *DataTransferReq) GetClientIp() uint32 {
	if x != nil && x.ClientIp != nil {
		return *x.ClientIp
	}
	return 0
}

//消息转发
type DataTransferRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdReq  *uint32 `protobuf:"varint,6,opt,name=id_req,json=idReq" json:"id_req,omitempty"` //转发ID
	Result *uint32 `protobuf:"varint,7,opt,name=result" json:"result,omitempty"`            //转发结果
}

func (x *DataTransferRsp) Reset() {
	*x = DataTransferRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataTransferRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTransferRsp) ProtoMessage() {}

func (x *DataTransferRsp) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTransferRsp.ProtoReflect.Descriptor instead.
func (*DataTransferRsp) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{6}
}

func (x *DataTransferRsp) GetIdReq() uint32 {
	if x != nil && x.IdReq != nil {
		return *x.IdReq
	}
	return 0
}

func (x *DataTransferRsp) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

//服务离线
type AppOfflineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOffline *bool   `protobuf:"varint,1,opt,name=is_offline,json=isOffline" json:"is_offline,omitempty"` //是否下线
	AppId     *uint32 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppType   *uint32 `protobuf:"varint,3,opt,name=app_type,json=appType" json:"app_type,omitempty"`
}

func (x *AppOfflineReq) Reset() {
	*x = AppOfflineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_router_router_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppOfflineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppOfflineReq) ProtoMessage() {}

func (x *AppOfflineReq) ProtoReflect() protoreflect.Message {
	mi := &file_router_router_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppOfflineReq.ProtoReflect.Descriptor instead.
func (*AppOfflineReq) Descriptor() ([]byte, []int) {
	return file_router_router_proto_rawDescGZIP(), []int{7}
}

func (x *AppOfflineReq) GetIsOffline() bool {
	if x != nil && x.IsOffline != nil {
		return *x.IsOffline
	}
	return false
}

func (x *AppOfflineReq) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *AppOfflineReq) GetAppType() uint32 {
	if x != nil && x.AppType != nil {
		return *x.AppType
	}
	return 0
}

var File_router_router_proto protoreflect.FileDescriptor

var file_router_router_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62, 0x73, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x22, 0x29, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x41, 0x64, 0x64, 0x72, 0x22, 0xd3, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x74, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x74, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x72, 0x65, 0x67, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x72, 0x65,
	0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x8a, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x52, 0x73, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x67, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x72, 0x65, 0x67, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x72, 0x65, 0x67, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xac,
	0x01, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x2e, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x66, 0x66, 0x4c, 0x69, 0x6e, 0x65, 0x10, 0x03, 0x22, 0xee, 0x01,
	0x0a, 0x0e, 0x41, 0x70, 0x70, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x3d, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x62, 0x73, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x70, 0x70,
	0x50, 0x75, 0x6c, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x50, 0x75, 0x6c, 0x73,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x0b, 0x50,
	0x75, 0x6c, 0x73, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x52, 0x73, 0x70, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x73, 0x70, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c,
	0x41, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x05, 0x22, 0xdb,
	0x03, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x72, 0x63, 0x5f, 0x61, 0x70, 0x70, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x72, 0x63, 0x41, 0x70, 0x70, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x72, 0x63, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x72, 0x63, 0x41, 0x70, 0x70, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x42, 0x75, 0x66, 0x66, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63,
	0x6d, 0x64, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x61,
	0x74, 0x61, 0x43, 0x6d, 0x64, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x63, 0x6d, 0x64, 0x73, 0x75, 0x62, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x6d, 0x64, 0x73, 0x75, 0x62, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x74, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65,
	0x63, 0x6f, 0x6e, 0x6e, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x74,
	0x74, 0x47, 0x61, 0x74, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x74, 0x74, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x61, 0x74, 0x74, 0x47, 0x61, 0x74, 0x65, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x74,
	0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x61, 0x74, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x22, 0x40, 0x0a, 0x0f,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x60,
	0x0a, 0x0d, 0x41, 0x70, 0x70, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x2a, 0xb4, 0x01, 0x0a, 0x0c, 0x43, 0x4d, 0x44, 0x49, 0x44, 0x5f, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x44, 0x41, 0x70, 0x70, 0x52, 0x65, 0x67, 0x52, 0x65, 0x71,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x44, 0x41, 0x70, 0x70, 0x52, 0x65, 0x67, 0x52, 0x73,
	0x70, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x44, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x44, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x73, 0x70, 0x10, 0x05, 0x12,
	0x11, 0x0a, 0x0d, 0x49, 0x44, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x44, 0x41, 0x70, 0x70, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x44, 0x41, 0x70, 0x70,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x49,
	0x44, 0x4c, 0x61, 0x73, 0x74, 0x10, 0x0a, 0x2a, 0x48, 0x0a, 0x10, 0x45, 0x6e, 0x75, 0x44, 0x61,
	0x74, 0x61, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x44,
	0x54, 0x5f, 0x41, 0x70, 0x70, 0x32, 0x41, 0x70, 0x70, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x44,
	0x54, 0x5f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x32, 0x41, 0x70, 0x70, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x44, 0x54, 0x5f, 0x41, 0x70, 0x70, 0x32, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x10,
	0x02, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
}

var (
	file_router_router_proto_rawDescOnce sync.Once
	file_router_router_proto_rawDescData = file_router_router_proto_rawDesc
)

func file_router_router_proto_rawDescGZIP() []byte {
	file_router_router_proto_rawDescOnce.Do(func() {
		file_router_router_proto_rawDescData = protoimpl.X.CompressGZIP(file_router_router_proto_rawDescData)
	})
	return file_router_router_proto_rawDescData
}

var file_router_router_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_router_router_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_router_router_proto_goTypes = []interface{}{
	(CMDID_Router)(0),               // 0: bs.router.CMDID_Router
	(EnuDataDirection)(0),           // 1: bs.router.EnuDataDirection
	(AppStateNotifyState)(0),        // 2: bs.router.AppStateNotify.state
	(AppPulseNotify_PulseAction)(0), // 3: bs.router.AppPulseNotify.PulseAction
	(*AppUpdateReq)(nil),            // 4: bs.router.AppUpdateReq
	(*RegisterAppReq)(nil),          // 5: bs.router.RegisterAppReq
	(*RegisterAppRsp)(nil),          // 6: bs.router.RegisterAppRsp
	(*AppStateNotify)(nil),          // 7: bs.router.AppStateNotify
	(*AppPulseNotify)(nil),          // 8: bs.router.AppPulseNotify
	(*DataTransferReq)(nil),         // 9: bs.router.DataTransferReq
	(*DataTransferRsp)(nil),         // 10: bs.router.DataTransferRsp
	(*AppOfflineReq)(nil),           // 11: bs.router.AppOfflineReq
}
var file_router_router_proto_depIdxs = []int32{
	3, // 0: bs.router.AppPulseNotify.action:type_name -> bs.router.AppPulseNotify.PulseAction
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_router_router_proto_init() }
func file_router_router_proto_init() {
	if File_router_router_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_router_router_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterAppRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppStateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPulseNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataTransferReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataTransferRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_router_router_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppOfflineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_router_router_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_router_router_proto_goTypes,
		DependencyIndexes: file_router_router_proto_depIdxs,
		EnumInfos:         file_router_router_proto_enumTypes,
		MessageInfos:      file_router_router_proto_msgTypes,
	}.Build()
	File_router_router_proto = out.File
	file_router_router_proto_rawDesc = nil
	file_router_router_proto_goTypes = nil
	file_router_router_proto_depIdxs = nil
}
